{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin-panel/admin-panel.component.ts","webpack:///src/app/admin-panel/admin-panel.component.html","webpack:///src/app/admin-panel/question-modal/question-modal.component.ts","webpack:///src/app/admin-panel/question-modal/question-modal.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/join-panel/join-panel.component.ts","webpack:///src/app/join-panel/join-panel.component.html","webpack:///src/app/models/question.model.ts","webpack:///src/app/reusables/chart/chart.component.ts","webpack:///src/app/reusables/chart/chart.component.html","webpack:///src/app/services/voting.service.ts","webpack:///src/app/start-panel/start-panel.component.ts","webpack:///src/app/start-panel/start-panel.component.html","webpack:///src/app/vote-panel/vote-panel.component.ts","webpack:///src/app/vote-panel/vote-panel.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminPanelComponent","actRoute","votingService","matDialog","sessionState","copyBtnText","paramMap","subscribe","params","get","update","setInterval","voting","launched","startSession","endSession","open","width","data","questionName","newArray","questions","forEach","element","title","push","removeQuestion","activateQuestion","toPromise","addQuestionModal","copyToClip","selector","templateUrl","styleUrls","QuestionModalComponent","dialogRef","formBuilder","responses","inputValid","form","group","required","min","description","voteId","index","newData","count","entry","inputText","responseInput","nativeElement","value","isUniqueResponseValue","length","indexOf","close","valid","validateResponses","question","addQuestion","onNoClick","addResponse","submit","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","JoinPanelComponent","console","log","history","state","QuestionModel","ChartComponent","VotingService","http","model","post","baseUrl","observe","providedIn","StartPanelComponent","fBuilder","titleService","router","hide","setTitle","name","max","key","submitNew","result","headerLocation","headers","slashIndex","lastIndexOf","substring","navigate","VotePanelComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {VotingService} from '../services/voting.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {QuestionModalComponent} from './question-modal/question-modal.component';\nimport {VotingModel} from '../models/voting.model';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.scss']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  private id: string;\n\n  public sessionState = 'Start';\n\n  public copyBtnText = 'Link';\n\n  public voting: VotingModel;\n\n\n  constructor(private actRoute: ActivatedRoute, private votingService: VotingService, private matDialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.actRoute.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n    this.update();\n    setInterval(this.update, 3000);\n  }\n\n  public startSession() {\n    if (!this.voting.launched) {\n      this.sessionState = 'Stop';\n      this.votingService.startSession(this.id);\n    } else {\n      this.sessionState = 'Start';\n      this.votingService.endSession(this.id);\n    }\n  }\n\n  public addQuestionModal() {\n    this.matDialog.open(QuestionModalComponent, {width: '75%', data: {id: this.id}});\n    this.update();\n  }\n\n  public copyToClip() {\n    this.copyBtnText = 'Copied';\n  }\n\n  public removeQuestion(questionName: string) {\n    const newArray = [];\n    this.voting.questions.forEach((element => {\n      if (questionName !== element.title) {\n        newArray.push(element);\n      }\n    }));\n    this.voting.questions = newArray;\n    this.votingService.removeQuestion(this.id, questionName);\n    this.update();\n  }\n\n  public activateQuestion(questionName: string) {\n    this.votingService.activateQuestion(this.id, questionName);\n    this.update();\n  }\n\n  private update() {\n    this.votingService.get(this.id).toPromise().then(data => {\n      this.voting = data;\n    });\n  }\n}\n","<div class=\"content\">\n  <h2>{{voting.name}}</h2>\n  <h3 style=\"color: #333333; font-style: italic; font-size: small\"\n      *ngIf=\"voting.description\">{{voting.description}}</h3>\n</div>\n<div class=\"panel-content\">\n  <div style=\"width: 70%;float: left\">\n    <h3>Questions:</h3>\n    <mat-table [dataSource]=\"voting.questions\" class=\"mat-elevation-z8\">\n      <!-- NUMBER Column -->\n      <ng-container matColumnDef=\"number\">\n        <mat-header-cell *matHeaderCellDef> No.</mat-header-cell>\n        <mat-cell *matCellDef=\"let element=index;\"> {{element + 1}} </mat-cell>\n      </ng-container>\n\n      <!-- TITLE Column -->\n      <ng-container matColumnDef=\"title\">\n        <mat-header-cell *matHeaderCellDef> Title</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.title}} </mat-cell>\n      </ng-container>\n\n      <!-- DESC Column -->\n      <ng-container matColumnDef=\"description\">\n        <mat-header-cell *matHeaderCellDef> Description</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"><p>{{element.description}}</p></mat-cell>\n      </ng-container>\n\n      <!-- ACTIVE Column -->\n      <ng-container matColumnDef=\"active\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button mat-raised-button color=\"accent\" *ngIf=\"element.active\" (click)=\"activateQuestion(element.title)\">\n            <mat-icon>settings_backup_restore</mat-icon>\n          </button>\n          <button mat-raised-button color=\"primary\" *ngIf=\"!element.active\" (click)=\"element.title\">\n            <mat-icon>not_started</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n\n      <!-- DELETE Column -->\n      <ng-container matColumnDef=\"delete\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button mat-raised-button color=\"warn\" (click)=\"removeQuestion(element.title)\">Delete</button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['number','title','description','active','delete']\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: ['number','title','description','active','delete'];\"></mat-row>\n    </mat-table>\n    <br>\n    <button mat-raised-button color=\"accent\" (click)=\"addQuestionModal()\">Add new</button>\n    <hr>\n    <h3>Results:</h3>\n    <br>\n    <button mat-raised-button color=\"accent\" (click)=\"startSession()\">Start Session</button>\n    &nbsp;\n    <button mat-raised-button color=\"accent\" [cdkCopyToClipboard]=\"voting.link\"\n            (click)=\"copyToClip()\">{{copyBtnText}}\n      <mat-icon>content_copy</mat-icon>\n    </button>\n\n  </div>\n  <div style=\"width: 25%; float: right; margin-left: 3%\">\n    <br><br>\n    <mat-card>\n      <mat-card-title>\n        Participants:\n      </mat-card-title>\n      <mat-card-content>\n        <mat-card style=\"padding: 5%; margin: 5%;\"\n                  [ngStyle]=\"{'background-color':!participant.observer ? 'lightgreen' : 'lightyellow' }\"\n                  *ngFor=\"let participant of voting.participants\">\n          <div>\n            {{participant.name}}&nbsp;\n            <span style=\"position: absolute; right: 10px\"> <mat-icon\n              *ngIf=\"participant.observer\">visibility</mat-icon></span>\n            <span style=\"position: absolute; right: 10px\"> <mat-icon\n              *ngIf=\"!participant.observer\">history_edu</mat-icon></span>\n          </div>\n        </mat-card>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import {Component, ElementRef, Inject, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {VotingService} from '../../services/voting.service';\nimport {QuestionModel} from '../../models/question.model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-question-modal',\n  templateUrl: './question-modal.component.html',\n  styleUrls: ['./question-modal.component.scss']\n})\nexport class QuestionModalComponent {\n\n  public responses = new MatTableDataSource();\n  public form: FormGroup;\n  public inputValid = true;\n  private voteId;\n  @ViewChild('responseInput') responseInput: ElementRef;\n\n  constructor(\n    public dialogRef: MatDialogRef<QuestionModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private votingService: VotingService,\n    private formBuilder: FormBuilder) {\n    this.form = formBuilder.group({\n      title: ['', [Validators.required, Validators.min(3)]],\n      description: ['', [Validators.min(3)]],\n    });\n    this.voteId = data.id;\n  }\n\n  public deleteResponseRow(index) {\n    if (index >= 0) {\n      const newData = [];\n      let count = 0;\n      this.responses.data.forEach(entry => {\n        if (count !== index) {\n          newData.push(entry);\n        }\n        count++;\n      });\n      this.responses.data = newData;\n    }\n  }\n\n  public addResponse() {\n    const inputText = this.responseInput.nativeElement.value;\n    if (this.isUniqueResponseValue(inputText) && inputText !== '') {\n      this.inputValid = true;\n      const data = this.responses.data;\n      data.push(inputText);\n      this.responses.data = data;\n    } else {\n      this.inputValid = false;\n    }\n  }\n\n  private validateResponses(): boolean {\n    return this.responses.data.length > 1;\n  }\n\n  private isUniqueResponseValue(value: string) {\n    return this.responses.data.indexOf(value) < 0;\n  }\n\n  public onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public submit(): void {\n    if (this.form.valid && this.validateResponses()) {\n      this.inputValid = true;\n      const question = new QuestionModel();\n      question.responses = this.responses.data as string[];\n      question.title = this.title.value;\n      question.description = this.description.value;\n      this.votingService.addQuestion(this.voteId, question);\n      this.onNoClick();\n    } else {\n      this.inputValid = false;\n    }\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n\n  get description() {\n    return this.form.get('description');\n  }\n}\n","<h1 mat-dialog-title>Add new Question</h1>\n<div mat-dialog-content>\n\n  <form [formGroup]=\"form\">\n    <mat-form-field appearance=\"standard\" style=\"width: 100%\">\n      <mat-label>Title</mat-label>\n      <input matInput placeholder=\"Primary question\" [formControl]=\"title\" required>\n      <mat-error *ngIf=\"title.invalid\">This field is mandatory and should be min 3 characters</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"standard\" style=\"width: 100%\">\n      <mat-label>Description</mat-label>\n      <textarea matInput placeholder=\"Additional information\" [formControl]=\"description\"></textarea>\n      <mat-error *ngIf=\"description.invalid\">This would appear under title and may include any additional information\n      </mat-error>\n    </mat-form-field>\n\n    <mat-table [dataSource]=\"responses\" class=\"mat-elevation-z8\">\n      <!-- NUMBER Column -->\n      <ng-container matColumnDef=\"number\">\n        <mat-header-cell *matHeaderCellDef> No.</mat-header-cell>\n        <mat-cell *matCellDef=\"let index = index;\"> {{index + 1}} </mat-cell>\n      </ng-container>\n\n      <!-- RESPONSE Column -->\n      <ng-container matColumnDef=\"response\">\n        <mat-header-cell *matHeaderCellDef> Response</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element}} </mat-cell>\n      </ng-container>\n\n      <!-- DELETE Column -->\n      <ng-container matColumnDef=\"delete\" style=\"margin: auto\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element=index\">\n          <button mat-button color=\"warn\" (click)=\"deleteResponseRow(element)\">\n            <mat-icon>remove_circle_outline</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['number','response','delete']\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: ['number','response','delete'];\"></mat-row>\n    </mat-table>\n    <br>\n    <div style=\"justify-content: center;display: flex;flex-direction: column;\">\n      <input matInput placeholder=\"New response option\" style=\"width: 100%; text-align: center\" #responseInput>\n      <div *ngIf=\"!inputValid\" style=\"width: 100%; text-align: center; color: red;font-size: small\">All responses should\n        be unique; at least 2 responses must be within one question\n      </div>\n      <button mat-button style=\"margin: auto\" (click)=\"addResponse()\">\n        <hr>\n        <mat-icon>add_circle_outline</mat-icon>\n      </button>\n    </div>\n\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"onNoClick()\">Close</button>\n  <button mat-raised-button (click)=\"submit()\" style=\"background: lightgreen\">Submit</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AdminPanelComponent} from './admin-panel/admin-panel.component';\nimport {JoinPanelComponent} from './join-panel/join-panel.component';\nimport {VotePanelComponent} from './vote-panel/vote-panel.component';\nimport {StartPanelComponent} from './start-panel/start-panel.component';\n\n\nconst routes: Routes = [\n  {path: '', component: StartPanelComponent},\n  {path: 'voting/:id', component: AdminPanelComponent},\n  {path: 'join/:id', component: JoinPanelComponent},\n  {path: 'vote/:id', component: VotePanelComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <img width=\"40\" alt=\"\" src=\"favicon.ico\"/>\n  <span>Anonymous Voting Platform</span>\n</div>\n<!-- Body  -->\n<router-outlet></router-outlet>\n<!-- Footer -->\n<footer class='footer content'>\n  <hr>\n  <blockquote cite=\"George Bernard Shaw\">\n    Democracy is a device that ensures we shall be governed no better than we deserve ...\n  </blockquote>\n  <em class=\"quote-author\"> George Bernard Shaw</em>\n</footer>\n\n<svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\"\n     viewBox=\"0 0 2611.084 485.677\">\n  <path id=\"Path_39\" data-name=\"Path 39\"\n        d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\"\n        transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\n</svg>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AdminPanelComponent} from './admin-panel/admin-panel.component';\nimport {JoinPanelComponent} from './join-panel/join-panel.component';\nimport {VotePanelComponent} from './vote-panel/vote-panel.component';\nimport {ChartComponent} from './reusables/chart/chart.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {VotingService} from './services/voting.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport { StartPanelComponent } from './start-panel/start-panel.component';\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {ClipboardModule} from \"@angular/cdk/clipboard\";\nimport { QuestionModalComponent } from './admin-panel/question-modal/question-modal.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminPanelComponent,\n    JoinPanelComponent,\n    VotePanelComponent,\n    ChartComponent,\n    StartPanelComponent,\n    QuestionModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatTabsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatGridListModule,\n    MatTableModule,\n    ClipboardModule,\n    MatDialogModule\n  ],\n  providers: [VotingService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-join-panel',\n  templateUrl: './join-panel.component.html',\n  styleUrls: ['./join-panel.component.scss']\n})\nexport class JoinPanelComponent implements OnInit {\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n    console.log(history.state.id);\n  }\n\n}\n","<p>join-panel works!</p>\n","export class QuestionModel {\r\n  title: string;\r\n  description: string;\r\n  responses: string[];\r\n  active: boolean;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss']\n})\nexport class ChartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chart works!</p>\n","import {Injectable} from '@angular/core';\r\nimport {NewVotingModel} from '../models/new.voting.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\nimport {VotingModel} from '../models/voting.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class VotingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public submitNew(model: NewVotingModel): Observable<any> {\r\n    return this.http.post(environment.baseUrl + 'voting/new', model, {observe: 'response'});\r\n  }\r\n\r\n  public get(id: string): Observable<any> {\r\n    return this.http.get<VotingModel>(environment.baseUrl + 'voting/' + id);\r\n  }\r\n\r\n  public removeQuestion(voteId: string, questionName: string) {\r\n    return this.http.delete(environment.baseUrl + 'voting/' + voteId + '/' + questionName);\r\n  }\r\n\r\n  public addQuestion(voteId: string, question) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/question', question);\r\n  }\r\n\r\n  public activateQuestion(voteId: string, questionName: string) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/question/' + questionName, '');\r\n  }\r\n\r\n  public startSession(voteId: string) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/start', '');\r\n  }\r\n\r\n  public endSession(voteId: string) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/end', '');\r\n  }\r\n\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {VotingService} from '../services/voting.service';\nimport {Title} from '@angular/platform-browser';\nimport {Router} from '@angular/router';\nimport {NewVotingModel} from '../models/new.voting.model';\n\n@Component({\n  selector: 'app-start-panel',\n  templateUrl: './start-panel.component.html',\n  styleUrls: ['./start-panel.component.scss']\n})\nexport class StartPanelComponent implements OnInit {\n  public form: FormGroup;\n  public title = 'Voting Service';\n  public hide = true;\n\n  constructor(private fBuilder: FormBuilder, private votingService: VotingService, private titleService: Title, private router: Router) {\n    titleService.setTitle(this.title);\n  }\n\n  ngOnInit(): void {\n    this.form = this.fBuilder.group({\n      name: ['', [Validators.required, Validators.max(48), Validators.min(3)]],\n      key: ['', [Validators.required, Validators.min(8)]],\n      description: ['']\n    });\n  }\n\n  public submit() {\n    if (this.form.valid) {\n      const model: NewVotingModel = {\n        name: this.name.value,\n        key: this.key.value,\n        description: this.description.value\n      };\n      this.votingService.submitNew(model).toPromise().then(result => {\n        let id: string;\n        const headerLocation = result.headers.get('Location');\n        const slashIndex = headerLocation.lastIndexOf('/');\n        id = headerLocation.substring(slashIndex + 1, headerLocation.length);\n        this.router.navigate(['voting', id]).then(() => {\n        });\n      });\n    }\n  }\n\n  get name() {\n    return this.form.get('name');\n  }\n\n  get key() {\n    return this.form.get('key');\n  }\n\n  get description() {\n    return this.form.get('description');\n  }\n\n}\n","<div class=\"content\" role=\"main\">\n  <mat-card class=\"card-width-75%\">\n    <mat-card-title> Begin new Session</mat-card-title>\n\n    <form [formGroup]=\"form\">\n      <br>\n      <mat-card-subtitle>Please fill out basic information about the session below. You will be able to\n        share the access link to session later on.\n      </mat-card-subtitle>\n      <br>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Session Name</mat-label>\n        <input matInput placeholder=\"Name of the session you would like to start\" [formControl]=\"name\" required>\n        <mat-error *ngIf=\"name.invalid\">This field is mandatory and should be min 3 and max 48 characters</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Session Key</mat-label>\n        <input matInput [type]=\"hide ? 'password' : 'text'\"\n               placeholder=\"Security key would be required to reclaim session from shared link\"\n               [formControl]=\"key\" required>\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-error *ngIf=\"key.invalid\">This field is mandatory and should be min 4 characters</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Session Description</mat-label>\n        <textarea matInput placeholder=\"This maybe useful for other participants; however, completely not mandatory\"\n                  [formControl]=\"description\"></textarea>\n        <mat-error *ngIf=\"description.invalid\">This field is mandatory and should be min 3 and max 48 characters\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-card-footer>\n        <button mat-raised-button (click)=\"submit()\" color=\"primary\" class=\"submit-btn\">Start Session</button>\n      </mat-card-footer>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-vote-panel',\n  templateUrl: './vote-panel.component.html',\n  styleUrls: ['./vote-panel.component.scss']\n})\nexport class VotePanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>vote-panel works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}