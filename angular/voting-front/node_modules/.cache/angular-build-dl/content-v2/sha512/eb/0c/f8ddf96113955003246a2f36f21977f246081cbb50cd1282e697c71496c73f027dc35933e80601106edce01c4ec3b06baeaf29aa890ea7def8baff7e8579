{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin-panel/admin-panel.component.ts","./src/app/admin-panel/admin-panel.component.html","./src/app/admin-panel/question-modal/question-modal.component.ts","./src/app/admin-panel/question-modal/question-modal.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/join-panel/join-panel.component.ts","./src/app/join-panel/join-panel.component.html","./src/app/models/question.model.ts","./src/app/reusables/chart/chart.component.ts","./src/app/reusables/chart/chart.component.html","./src/app/services/voting.service.ts","./src/app/start-panel/start-panel.component.ts","./src/app/start-panel/start-panel.component.html","./src/app/vote-panel/vote-panel.component.ts","./src/app/vote-panel/vote-panel.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {VotingService} from '../services/voting.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {QuestionModalComponent} from './question-modal/question-modal.component';\nimport {VotingModel} from '../models/voting.model';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.scss']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  private id: string;\n\n  public sessionState = 'Start';\n\n  public copyBtnText = 'Link';\n\n  public voting: VotingModel;\n\n\n  constructor(private actRoute: ActivatedRoute, private votingService: VotingService, private matDialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.actRoute.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n    this.update();\n    setInterval(this.update, 3000);\n  }\n\n  public startSession() {\n    if (!this.voting.launched) {\n      this.sessionState = 'Stop';\n      this.votingService.startSession(this.id);\n    } else {\n      this.sessionState = 'Start';\n      this.votingService.endSession(this.id);\n    }\n  }\n\n  public addQuestionModal() {\n    this.matDialog.open(QuestionModalComponent, {width: '75%', data: {id: this.id}});\n    this.update();\n  }\n\n  public copyToClip() {\n    this.copyBtnText = 'Copied';\n  }\n\n  public removeQuestion(questionName: string) {\n    const newArray = [];\n    this.voting.questions.forEach((element => {\n      if (questionName !== element.title) {\n        newArray.push(element);\n      }\n    }));\n    this.voting.questions = newArray;\n    this.votingService.removeQuestion(this.id, questionName);\n    this.update();\n  }\n\n  public activateQuestion(questionName: string) {\n    this.votingService.activateQuestion(this.id, questionName);\n    this.update();\n  }\n\n  private update() {\n    this.votingService.get(this.id).toPromise().then(data => {\n      this.voting = data;\n    });\n  }\n}\n","<div class=\"content\">\n  <h2>{{voting.name}}</h2>\n  <h3 style=\"color: #333333; font-style: italic; font-size: small\"\n      *ngIf=\"voting.description\">{{voting.description}}</h3>\n</div>\n<div class=\"panel-content\">\n  <div style=\"width: 70%;float: left\">\n    <h3>Questions:</h3>\n    <mat-table [dataSource]=\"voting.questions\" class=\"mat-elevation-z8\">\n      <!-- NUMBER Column -->\n      <ng-container matColumnDef=\"number\">\n        <mat-header-cell *matHeaderCellDef> No.</mat-header-cell>\n        <mat-cell *matCellDef=\"let element=index;\"> {{element + 1}} </mat-cell>\n      </ng-container>\n\n      <!-- TITLE Column -->\n      <ng-container matColumnDef=\"title\">\n        <mat-header-cell *matHeaderCellDef> Title</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.title}} </mat-cell>\n      </ng-container>\n\n      <!-- DESC Column -->\n      <ng-container matColumnDef=\"description\">\n        <mat-header-cell *matHeaderCellDef> Description</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"><p>{{element.description}}</p></mat-cell>\n      </ng-container>\n\n      <!-- ACTIVE Column -->\n      <ng-container matColumnDef=\"active\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button mat-raised-button color=\"accent\" *ngIf=\"element.active\" (click)=\"activateQuestion(element.title)\">\n            <mat-icon>settings_backup_restore</mat-icon>\n          </button>\n          <button mat-raised-button color=\"primary\" *ngIf=\"!element.active\" (click)=\"element.title\">\n            <mat-icon>not_started</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n\n      <!-- DELETE Column -->\n      <ng-container matColumnDef=\"delete\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button mat-raised-button color=\"warn\" (click)=\"removeQuestion(element.title)\">Delete</button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['number','title','description','active','delete']\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: ['number','title','description','active','delete'];\"></mat-row>\n    </mat-table>\n    <br>\n    <button mat-raised-button color=\"accent\" (click)=\"addQuestionModal()\">Add new</button>\n    <hr>\n    <h3>Results:</h3>\n    <br>\n    <button mat-raised-button color=\"accent\" (click)=\"startSession()\">Start Session</button>\n    &nbsp;\n    <button mat-raised-button color=\"accent\" [cdkCopyToClipboard]=\"voting.link\"\n            (click)=\"copyToClip()\">{{copyBtnText}}\n      <mat-icon>content_copy</mat-icon>\n    </button>\n\n  </div>\n  <div style=\"width: 25%; float: right; margin-left: 3%\">\n    <br><br>\n    <mat-card>\n      <mat-card-title>\n        Participants:\n      </mat-card-title>\n      <mat-card-content>\n        <mat-card style=\"padding: 5%; margin: 5%;\"\n                  [ngStyle]=\"{'background-color':!participant.observer ? 'lightgreen' : 'lightyellow' }\"\n                  *ngFor=\"let participant of voting.participants\">\n          <div>\n            {{participant.name}}&nbsp;\n            <span style=\"position: absolute; right: 10px\"> <mat-icon\n              *ngIf=\"participant.observer\">visibility</mat-icon></span>\n            <span style=\"position: absolute; right: 10px\"> <mat-icon\n              *ngIf=\"!participant.observer\">history_edu</mat-icon></span>\n          </div>\n        </mat-card>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import {Component, ElementRef, Inject, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {VotingService} from '../../services/voting.service';\nimport {QuestionModel} from '../../models/question.model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-question-modal',\n  templateUrl: './question-modal.component.html',\n  styleUrls: ['./question-modal.component.scss']\n})\nexport class QuestionModalComponent {\n\n  public responses = new MatTableDataSource();\n  public form: FormGroup;\n  public inputValid = true;\n  private voteId;\n  @ViewChild('responseInput') responseInput: ElementRef;\n\n  constructor(\n    public dialogRef: MatDialogRef<QuestionModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private votingService: VotingService,\n    private formBuilder: FormBuilder) {\n    this.form = formBuilder.group({\n      title: ['', [Validators.required, Validators.min(3)]],\n      description: ['', [Validators.min(3)]],\n    });\n    this.voteId = data.id;\n  }\n\n  public deleteResponseRow(index) {\n    if (index >= 0) {\n      const newData = [];\n      let count = 0;\n      this.responses.data.forEach(entry => {\n        if (count !== index) {\n          newData.push(entry);\n        }\n        count++;\n      });\n      this.responses.data = newData;\n    }\n  }\n\n  public addResponse() {\n    const inputText = this.responseInput.nativeElement.value;\n    if (this.isUniqueResponseValue(inputText) && inputText !== '') {\n      this.inputValid = true;\n      const data = this.responses.data;\n      data.push(inputText);\n      this.responses.data = data;\n    } else {\n      this.inputValid = false;\n    }\n  }\n\n  private validateResponses(): boolean {\n    return this.responses.data.length > 1;\n  }\n\n  private isUniqueResponseValue(value: string) {\n    return this.responses.data.indexOf(value) < 0;\n  }\n\n  public onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public submit(): void {\n    if (this.form.valid && this.validateResponses()) {\n      this.inputValid = true;\n      const question = new QuestionModel();\n      question.responses = this.responses.data as string[];\n      question.title = this.title.value;\n      question.description = this.description.value;\n      this.votingService.addQuestion(this.voteId, question);\n      this.onNoClick();\n    } else {\n      this.inputValid = false;\n    }\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n\n  get description() {\n    return this.form.get('description');\n  }\n}\n","<h1 mat-dialog-title>Add new Question</h1>\n<div mat-dialog-content>\n\n  <form [formGroup]=\"form\">\n    <mat-form-field appearance=\"standard\" style=\"width: 100%\">\n      <mat-label>Title</mat-label>\n      <input matInput placeholder=\"Primary question\" [formControl]=\"title\" required>\n      <mat-error *ngIf=\"title.invalid\">This field is mandatory and should be min 3 characters</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"standard\" style=\"width: 100%\">\n      <mat-label>Description</mat-label>\n      <textarea matInput placeholder=\"Additional information\" [formControl]=\"description\"></textarea>\n      <mat-error *ngIf=\"description.invalid\">This would appear under title and may include any additional information\n      </mat-error>\n    </mat-form-field>\n\n    <mat-table [dataSource]=\"responses\" class=\"mat-elevation-z8\">\n      <!-- NUMBER Column -->\n      <ng-container matColumnDef=\"number\">\n        <mat-header-cell *matHeaderCellDef> No.</mat-header-cell>\n        <mat-cell *matCellDef=\"let index = index;\"> {{index + 1}} </mat-cell>\n      </ng-container>\n\n      <!-- RESPONSE Column -->\n      <ng-container matColumnDef=\"response\">\n        <mat-header-cell *matHeaderCellDef> Response</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element}} </mat-cell>\n      </ng-container>\n\n      <!-- DELETE Column -->\n      <ng-container matColumnDef=\"delete\" style=\"margin: auto\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element=index\">\n          <button mat-button color=\"warn\" (click)=\"deleteResponseRow(element)\">\n            <mat-icon>remove_circle_outline</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['number','response','delete']\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: ['number','response','delete'];\"></mat-row>\n    </mat-table>\n    <br>\n    <div style=\"justify-content: center;display: flex;flex-direction: column;\">\n      <input matInput placeholder=\"New response option\" style=\"width: 100%; text-align: center\" #responseInput>\n      <div *ngIf=\"!inputValid\" style=\"width: 100%; text-align: center; color: red;font-size: small\">All responses should\n        be unique; at least 2 responses must be within one question\n      </div>\n      <button mat-button style=\"margin: auto\" (click)=\"addResponse()\">\n        <hr>\n        <mat-icon>add_circle_outline</mat-icon>\n      </button>\n    </div>\n\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"onNoClick()\">Close</button>\n  <button mat-raised-button (click)=\"submit()\" style=\"background: lightgreen\">Submit</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AdminPanelComponent} from './admin-panel/admin-panel.component';\nimport {JoinPanelComponent} from './join-panel/join-panel.component';\nimport {VotePanelComponent} from './vote-panel/vote-panel.component';\nimport {StartPanelComponent} from './start-panel/start-panel.component';\n\n\nconst routes: Routes = [\n  {path: '', component: StartPanelComponent},\n  {path: 'voting/:id', component: AdminPanelComponent},\n  {path: 'join/:id', component: JoinPanelComponent},\n  {path: 'vote/:id', component: VotePanelComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <img width=\"40\" alt=\"\" src=\"favicon.ico\"/>\n  <span>Anonymous Voting Platform</span>\n</div>\n<!-- Body  -->\n<router-outlet></router-outlet>\n<!-- Footer -->\n<footer class='footer content'>\n  <hr>\n  <blockquote cite=\"George Bernard Shaw\">\n    Democracy is a device that ensures we shall be governed no better than we deserve ...\n  </blockquote>\n  <em class=\"quote-author\"> George Bernard Shaw</em>\n</footer>\n\n<svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\"\n     viewBox=\"0 0 2611.084 485.677\">\n  <path id=\"Path_39\" data-name=\"Path 39\"\n        d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\"\n        transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\n</svg>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AdminPanelComponent} from './admin-panel/admin-panel.component';\nimport {JoinPanelComponent} from './join-panel/join-panel.component';\nimport {VotePanelComponent} from './vote-panel/vote-panel.component';\nimport {ChartComponent} from './reusables/chart/chart.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {VotingService} from './services/voting.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport { StartPanelComponent } from './start-panel/start-panel.component';\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {ClipboardModule} from \"@angular/cdk/clipboard\";\nimport { QuestionModalComponent } from './admin-panel/question-modal/question-modal.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminPanelComponent,\n    JoinPanelComponent,\n    VotePanelComponent,\n    ChartComponent,\n    StartPanelComponent,\n    QuestionModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatTabsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatGridListModule,\n    MatTableModule,\n    ClipboardModule,\n    MatDialogModule\n  ],\n  providers: [VotingService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-join-panel',\n  templateUrl: './join-panel.component.html',\n  styleUrls: ['./join-panel.component.scss']\n})\nexport class JoinPanelComponent implements OnInit {\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n    console.log(history.state.id);\n  }\n\n}\n","<p>join-panel works!</p>\n","export class QuestionModel {\r\n  title: string;\r\n  description: string;\r\n  responses: string[];\r\n  active: boolean;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss']\n})\nexport class ChartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chart works!</p>\n","import {Injectable} from '@angular/core';\r\nimport {NewVotingModel} from '../models/new.voting.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\nimport {VotingModel} from '../models/voting.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class VotingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public submitNew(model: NewVotingModel): Observable<any> {\r\n    return this.http.post(environment.baseUrl + 'voting/new', model, {observe: 'response'});\r\n  }\r\n\r\n  public get(id: string): Observable<any> {\r\n    return this.http.get<VotingModel>(environment.baseUrl + 'voting/' + id);\r\n  }\r\n\r\n  public removeQuestion(voteId: string, questionName: string) {\r\n    return this.http.delete(environment.baseUrl + 'voting/' + voteId + '/' + questionName);\r\n  }\r\n\r\n  public addQuestion(voteId: string, question) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/question', question);\r\n  }\r\n\r\n  public activateQuestion(voteId: string, questionName: string) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/question/' + questionName, '');\r\n  }\r\n\r\n  public startSession(voteId: string) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/start', '');\r\n  }\r\n\r\n  public endSession(voteId: string) {\r\n    return this.http.post(environment.baseUrl + 'voting/' + voteId + '/end', '');\r\n  }\r\n\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {VotingService} from '../services/voting.service';\nimport {Title} from '@angular/platform-browser';\nimport {Router} from '@angular/router';\nimport {NewVotingModel} from '../models/new.voting.model';\n\n@Component({\n  selector: 'app-start-panel',\n  templateUrl: './start-panel.component.html',\n  styleUrls: ['./start-panel.component.scss']\n})\nexport class StartPanelComponent implements OnInit {\n  public form: FormGroup;\n  public title = 'Voting Service';\n  public hide = true;\n\n  constructor(private fBuilder: FormBuilder, private votingService: VotingService, private titleService: Title, private router: Router) {\n    titleService.setTitle(this.title);\n  }\n\n  ngOnInit(): void {\n    this.form = this.fBuilder.group({\n      name: ['', [Validators.required, Validators.max(48), Validators.min(3)]],\n      key: ['', [Validators.required, Validators.min(8)]],\n      description: ['']\n    });\n  }\n\n  public submit() {\n    if (this.form.valid) {\n      const model: NewVotingModel = {\n        name: this.name.value,\n        key: this.key.value,\n        description: this.description.value\n      };\n      this.votingService.submitNew(model).toPromise().then(result => {\n        let id: string;\n        const headerLocation = result.headers.get('Location');\n        const slashIndex = headerLocation.lastIndexOf('/');\n        id = headerLocation.substring(slashIndex + 1, headerLocation.length);\n        this.router.navigate(['voting', id]).then(() => {\n        });\n      });\n    }\n  }\n\n  get name() {\n    return this.form.get('name');\n  }\n\n  get key() {\n    return this.form.get('key');\n  }\n\n  get description() {\n    return this.form.get('description');\n  }\n\n}\n","<div class=\"content\" role=\"main\">\n  <mat-card class=\"card-width-75%\">\n    <mat-card-title> Begin new Session</mat-card-title>\n\n    <form [formGroup]=\"form\">\n      <br>\n      <mat-card-subtitle>Please fill out basic information about the session below. You will be able to\n        share the access link to session later on.\n      </mat-card-subtitle>\n      <br>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Session Name</mat-label>\n        <input matInput placeholder=\"Name of the session you would like to start\" [formControl]=\"name\" required>\n        <mat-error *ngIf=\"name.invalid\">This field is mandatory and should be min 3 and max 48 characters</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Session Key</mat-label>\n        <input matInput [type]=\"hide ? 'password' : 'text'\"\n               placeholder=\"Security key would be required to reclaim session from shared link\"\n               [formControl]=\"key\" required>\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-error *ngIf=\"key.invalid\">This field is mandatory and should be min 4 characters</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Session Description</mat-label>\n        <textarea matInput placeholder=\"This maybe useful for other participants; however, completely not mandatory\"\n                  [formControl]=\"description\"></textarea>\n        <mat-error *ngIf=\"description.invalid\">This field is mandatory and should be min 3 and max 48 characters\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-card-footer>\n        <button mat-raised-button (click)=\"submit()\" color=\"primary\" class=\"submit-btn\">Start Session</button>\n      </mat-card-footer>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-vote-panel',\n  templateUrl: './vote-panel.component.html',\n  styleUrls: ['./vote-panel.component.scss']\n})\nexport class VotePanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>vote-panel works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}